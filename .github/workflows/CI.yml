name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}  # Continue after failures
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        experimental: [false]  # These versions must pass.

        include:
            - os: ubuntu-latest
              python-version: "nightly"
              experimental: true

#            - os: windows-latest  ## Obviously deadsnakes is not compble with Windows.
#              python-version: 3.10-dev
#              experimental: true


    steps:
    - uses: actions/checkout@v2  # Checkout repo.

    - name: Set up production Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      if: "!endsWith(matrix.python-version, "nightly")"
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up dev Python ${{ matrix.python-version }}
      uses: deadsnakes/action@v2.1.1
      if: endsWith(matrix.python-version, 'nightly')
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display python version.
      run: python --version --version && which python

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install -r requirements_dev.txt

    - name: Test with pytest --cov=./ --mypy -vv
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        pytest --cov=./ --mypy -vv
        coveralls --service=github

  coveralls_finish:
      needs: test
      runs-on: ubuntu-latest
      steps:
      - name: Coveralls Finished report
        uses: AndreMiras/coveralls-python-action@develop
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel: true
          parallel-finished: true
          flag-name: github_action_tests
          base-path: '.'
          debug: true
